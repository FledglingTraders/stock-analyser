name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    if: github.base_ref == 'main' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      - name: Extract version
        run: echo "VERSION=$(cat VERSION | tr -d '[:space:]')" >> $GITHUB_ENV

      - name: Extract commit hash and date
        run: |
          echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Determine Tag Name and Deployment Folder
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" && "${{ github.base_ref }}" == "main" ]]; then
            echo "IMAGE_TAG=${VERSION}-alpha-${DATE}-${COMMIT_HASH}" >> $GITHUB_ENV
            echo "DEPLOY_ENV=develop" >> $GITHUB_ENV
            echo "DEPLOY_ENV=$(printenv DEPLOY_ENV)"
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "IMAGE_TAG=${VERSION}-${DATE}-${COMMIT_HASH}" >> $GITHUB_ENV
            echo "DEPLOY_ENV=prod" >> $GITHUB_ENV
            echo "DEPLOY_ENV=$(printenv DEPLOY_ENV)"
          else
            echo "Skipping workflow as the branch is not main."
            exit 0
          fi

      - name: Build Docker Image
        run: docker build -t stock-analyser .

      - name: Tag and Push Docker Image
        run: |
          FULL_IMAGE_TAG="${{ secrets.ECR_REPOSITORY }}:${IMAGE_TAG}"
          echo "Tagging Docker image with: $FULL_IMAGE_TAG"

          docker tag stock-analyser "$FULL_IMAGE_TAG"
          docker push "$FULL_IMAGE_TAG"

          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            docker tag stock-analyser "${{ secrets.ECR_REPOSITORY }}:latest"
            docker push "${{ secrets.ECR_REPOSITORY }}:latest"
          fi

  update-deployment-repo:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout deployment repository
        uses: actions/checkout@v4
        with:
          repository: FledglingTraders/stock-analyser-deploy
          token: ${{ secrets.DEPLOY_REPO_PAT }}

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Update docker-compose.yml
        run: |
          DEPLOY_FOLDER="${{ github.workspace }}/${DEPLOY_ENV}"
          COMPOSE_FILE="$DEPLOY_FOLDER/docker-compose.yml"

          if [[ -f "$COMPOSE_FILE" ]]; then
            sed -i "s|image: .*|image: ${{ secrets.ECR_REPOSITORY }}:${IMAGE_TAG}|" "$COMPOSE_FILE"
          else
            echo "ERROR: docker-compose.yml not found!"
            exit 1
          fi

      - name: Commit and Push Changes
        run: |
          cd "${{ github.workspace }}"
          git add .
          git commit -m "Update docker image to ${{ secrets.ECR_REPOSITORY }}:${IMAGE_TAG}"
          git push origin main
